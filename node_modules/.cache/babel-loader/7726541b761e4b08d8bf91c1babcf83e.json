{"ast":null,"code":"var _jsxFileName = \"/Users/jayounglee/nway/nwayplay-boilerplate-fe/src/stories/components/PageHeader/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { alignItemsType, foundation, Grid, IconButton, IconButtonSize, InfoIcon, justifyContentType, KeyboardArrowLeftIcon, Typography, wrapType } from \"lib\";\nimport { useRecoilValue } from \"recoil\";\nimport configs from \"configs\";\nimport { useHistoryBack } from \"hooks\";\nimport { viewNavigationState } from \"store\";\nimport { CookieName } from \"utils/cookie\";\nimport CookieManager from \"utils/CookieManager\";\nimport Container from \"stories/components/Container\";\nimport * as styles from \"./styles\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst PageHeader = ({\n  show = true,\n  main = false,\n  title,\n  onClickBack,\n  tooltip,\n  tooltipOnClick,\n  darkMode\n}) => {\n  _s();\n\n  const layoutState = useRecoilValue(viewNavigationState);\n  const goHistoryBack = useHistoryBack();\n  const email = CookieManager.getCookie(CookieName.NWAYPLAY_EMAIL) || \"\";\n\n  const goBack = () => {\n    if (onClickBack) {\n      onClickBack();\n      return;\n    } // window.history.back();\n\n\n    goHistoryBack();\n  };\n\n  return ___EmotionJSX(\"div\", {\n    css: styles.PageHeaderStyle(layoutState.isMobileView, show, darkMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, main === true ? ___EmotionJSX(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Grid, {\n    container: true,\n    alignItems: alignItemsType.center,\n    justifyContent: justifyContentType.spaceBetween,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Grid, {\n    container: true,\n    wrap: wrapType.nowrap,\n    alignItems: alignItemsType.center,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"a\", {\n    href: configs.NWAYPLAY_DOMAIN || \"/\",\n    css: styles.logoIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  })), ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, (title || title !== undefined) && ___EmotionJSX(Typography, {\n    variant: \"title2\",\n    color: darkMode ? foundation.tailWindColors.white : foundation.tailWindColors.gray[900],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"span\", {\n    css: styles.WhiteSpace(darkMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, title))))))) : ___EmotionJSX(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Grid, {\n    container: true,\n    alignItems: alignItemsType.center,\n    justifyContent: justifyContentType.spaceBetween,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Grid, {\n    container: true,\n    wrap: wrapType.nowrap,\n    alignItems: alignItemsType.center,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(IconButton, {\n    size: IconButtonSize.large,\n    onClick: () => goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(KeyboardArrowLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }))), ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, (title || title !== undefined) && ___EmotionJSX(Typography, {\n    variant: \"title2\",\n    color: foundation.tailWindColors.gray[900],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"span\", {\n    css: styles.WhiteSpace(darkMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, title))))), ___EmotionJSX(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, tooltip && ___EmotionJSX(IconButton, {\n    size: IconButtonSize.large,\n    onClick: tooltipOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }))))));\n};\n\n_s(PageHeader, \"BhvrherK/83MRECOGNVAvd+00fY=\", false, function () {\n  return [useRecoilValue, useHistoryBack];\n});\n\n_c = PageHeader;\nexport default PageHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHeader\");","map":{"version":3,"sources":["/Users/jayounglee/nway/nwayplay-boilerplate-fe/src/stories/components/PageHeader/index.tsx"],"names":["alignItemsType","foundation","Grid","IconButton","IconButtonSize","InfoIcon","justifyContentType","KeyboardArrowLeftIcon","Typography","wrapType","useRecoilValue","configs","useHistoryBack","viewNavigationState","CookieName","CookieManager","Container","styles","PageHeader","show","main","title","onClickBack","tooltip","tooltipOnClick","darkMode","layoutState","goHistoryBack","email","getCookie","NWAYPLAY_EMAIL","goBack","PageHeaderStyle","isMobileView","center","spaceBetween","nowrap","NWAYPLAY_DOMAIN","logoIcon","undefined","tailWindColors","white","gray","WhiteSpace","large"],"mappings":"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","sourcesContent":["import {\n  alignItemsType,\n  foundation,\n  Grid,\n  IconButton,\n  IconButtonSize,\n  InfoIcon,\n  justifyContentType,\n  KeyboardArrowLeftIcon,\n  Typography,\n  wrapType,\n} from \"lib\";\nimport { useRecoilValue } from \"recoil\";\nimport configs from \"configs\";\nimport { useHistoryBack } from \"hooks\";\nimport { viewNavigationState } from \"store\";\nimport { CookieName } from \"utils/cookie\";\nimport CookieManager from \"utils/CookieManager\";\nimport Container from \"stories/components/Container\";\nimport * as styles from \"./styles\";\n\nconst PageHeader = ({\n  show = true,\n  main = false,\n  title,\n  onClickBack,\n  tooltip,\n  tooltipOnClick,\n  darkMode,\n}: {\n  main?: boolean;\n  show?: boolean;\n  title?: string;\n  tooltip?: boolean;\n  darkMode?: boolean;\n  tooltipOnClick?: () => void;\n  onClickBack?: () => void;\n}) => {\n  const layoutState = useRecoilValue<{\n    showHeaderOnMobile: boolean;\n    isMobileView: boolean;\n    hideNavigation: boolean;\n  }>(viewNavigationState);\n  const goHistoryBack = useHistoryBack();\n  const email = CookieManager.getCookie(CookieName.NWAYPLAY_EMAIL) || \"\";\n\n  const goBack = () => {\n    if (onClickBack) {\n      onClickBack();\n      return;\n    }\n\n    // window.history.back();\n    goHistoryBack();\n  };\n\n  return (\n    <div css={styles.PageHeaderStyle(layoutState.isMobileView, show, darkMode)}>\n      {/* 나중에 main과 normal 분리해야함 */}\n      {main === true ? (\n        <Container>\n          <Grid\n            container\n            alignItems={alignItemsType.center}\n            justifyContent={justifyContentType.spaceBetween}\n          >\n            <Grid item>\n              <Grid\n                container\n                wrap={wrapType.nowrap}\n                alignItems={alignItemsType.center}\n                spacing={2}\n              >\n                <Grid item>\n                  <a\n                    href={configs.NWAYPLAY_DOMAIN || \"/\"}\n                    css={styles.logoIcon}\n                  />\n                </Grid>\n                <Grid item>\n                  {(title || title !== undefined) && (\n                    <Typography\n                      variant=\"title2\"\n                      color={\n                        darkMode\n                          ? foundation.tailWindColors.white\n                          : foundation.tailWindColors.gray[900]\n                      }\n                    >\n                      <span css={styles.WhiteSpace(darkMode)}>{title}</span>\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      ) : (\n        <Container>\n          <Grid\n            container\n            alignItems={alignItemsType.center}\n            justifyContent={justifyContentType.spaceBetween}\n          >\n            <Grid item>\n              <Grid\n                container\n                wrap={wrapType.nowrap}\n                alignItems={alignItemsType.center}\n                spacing={2}\n              >\n                <Grid item>\n                  <IconButton\n                    size={IconButtonSize.large}\n                    onClick={() => goBack()}\n                  >\n                    <KeyboardArrowLeftIcon />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  {(title || title !== undefined) && (\n                    <Typography\n                      variant=\"title2\"\n                      color={foundation.tailWindColors.gray[900]}\n                    >\n                      <span css={styles.WhiteSpace(darkMode)}>{title}</span>\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              {tooltip && (\n                <IconButton\n                  size={IconButtonSize.large}\n                  onClick={tooltipOnClick}\n                >\n                  <InfoIcon />\n                </IconButton>\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default PageHeader;\n"]},"metadata":{},"sourceType":"module"}