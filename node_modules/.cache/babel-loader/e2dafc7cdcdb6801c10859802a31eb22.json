{"ast":null,"code":"var _jsxFileName = \"/Users/jayounglee/nway/nwayplay-boilerplate-fe/src/stories/components/Layout/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRecoilValue } from \"recoil\";\nimport { viewNavigationState } from \"store\";\nimport GlobalNavigationBar from \"stories/components/GlobalNavigationBar\";\nimport * as styles from \"./styles\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Layout = ({\n  children\n}) => {\n  _s();\n\n  const layoutState = useRecoilValue(viewNavigationState);\n  return ___EmotionJSX(\"div\", {\n    css: styles.LayoutStyle(layoutState.isMobileView),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, layoutState.isMobileView === true ? null : ___EmotionJSX(GlobalNavigationBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 51\n    }\n  }), ___EmotionJSX(\"main\", {\n    css: styles.MainStyle(layoutState.isMobileView),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(Layout, \"BrFAtSG/o7AhVb3AoxOlgTrVDWI=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jayounglee/nway/nwayplay-boilerplate-fe/src/stories/components/Layout/index.tsx"],"names":["useRecoilValue","viewNavigationState","GlobalNavigationBar","styles","Layout","children","layoutState","LayoutStyle","isMobileView","MainStyle"],"mappings":";;;AACA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,mBAAT,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACxD,QAAMC,WAAW,GAAGN,cAAc,CAI/BC,mBAJ+B,CAAlC;AAMA,SACE;AAAK,IAAA,GAAG,EAAEE,MAAM,CAACI,WAAP,CAAmBD,WAAW,CAACE,YAA/B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,CAACE,YAAZ,KAA6B,IAA7B,GAAoC,IAApC,GAA2C,cAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9C,EAGE;AAAM,IAAA,GAAG,EAAEL,MAAM,CAACM,SAAP,CAAiBH,WAAW,CAACE,YAA7B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDH,QAAxD,CAHF,CADF;AAQD,CAfD;;GAAMD,M;UACgBJ,c;;;KADhBI,M;AAiBN,eAAeA,MAAf","sourcesContent":["import { ReactNode } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { viewNavigationState } from \"store\";\nimport GlobalNavigationBar from \"stories/components/GlobalNavigationBar\";\nimport * as styles from \"./styles\";\n\nconst Layout = ({ children }: { children: ReactNode }) => {\n  const layoutState = useRecoilValue<{\n    showHeaderOnMobile: boolean;\n    isMobileView: boolean;\n    hideNavigation: boolean;\n  }>(viewNavigationState);\n\n  return (\n    <div css={styles.LayoutStyle(layoutState.isMobileView)}>\n      {layoutState.isMobileView === true ? null : <GlobalNavigationBar />}\n      {/* {!isMobileView && !hideNavigation && <SideNavigation />} */}\n      <main css={styles.MainStyle(layoutState.isMobileView)}>{children}</main>\n      {/* {isMobileView && !hideNavigation && <BottomNavigation />} */}\n    </div>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}