{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport configs from \"../configs\";\nimport { CookieName, getCookie, eraseCookie } from \"./cookie\";\nexport default class CookieManager {\n  static setAuthToken(token) {\n    const payload = jwt_decode(token);\n    const tokenExpTime = payload.exp * 1000;\n    this.setCookie(CookieName.NWAYPLAY_AUTH_TOKEN, token, tokenExpTime);\n  }\n\n  static deleteAuthToken() {\n    this.deleteCookie(CookieName.NWAYPLAY_AUTH_TOKEN);\n  }\n\n  static setNwayAuthToken(token) {\n    const payload = jwt_decode(token);\n    const tokenExpTime = payload.ts + payload.expiry;\n    this.setCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN, token, tokenExpTime);\n  }\n\n  static deleteNwayAuthToken() {\n    this.deleteCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN);\n  }\n\n  static deleteNwayAuth() {\n    this.deleteCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN);\n    this.deleteCookie(CookieName.NWAYPLAY_NWAY_PID);\n    this.deleteCookie(CookieName.NWAYPLAY_DISPLAY_NAME);\n    this.deleteCookie(CookieName.NWAYPLAY_EMAIL);\n  }\n\n}\n\nCookieManager.setCookie = (name, value, time) => {\n  var expires = \"\";\n\n  if (time) {\n    var date = new Date(); // date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\n    date.setTime(time);\n    expires = \"; expires=\" + date.toUTCString();\n  }\n\n  if (configs.ENV === \"LOCAL\") {\n    // local\n    document.cookie = name + \"=\" + (value || \"\") + expires + \";path=/\";\n  } else {\n    // server\n    document.cookie = name + \"=\" + (value || \"\") + expires + \";domain=.nwayplay.com;SameSite=Strict;Secure;path=/\";\n  }\n};\n\nCookieManager.getCookie = name => {\n  return getCookie(name);\n};\n\nCookieManager.deleteCookie = name => {\n  eraseCookie(name);\n};","map":{"version":3,"sources":["/Users/jayounglee/nway/nwayplay-boilerplate-fe/src/utils/CookieManager.ts"],"names":["jwt_decode","configs","CookieName","getCookie","eraseCookie","CookieManager","setAuthToken","token","payload","tokenExpTime","exp","setCookie","NWAYPLAY_AUTH_TOKEN","deleteAuthToken","deleteCookie","setNwayAuthToken","ts","expiry","NWAYPLAY_NWAY_AUTH_TOKEN","deleteNwayAuthToken","deleteNwayAuth","NWAYPLAY_NWAY_PID","NWAYPLAY_DISPLAY_NAME","NWAYPLAY_EMAIL","name","value","time","expires","date","Date","setTime","toUTCString","ENV","document","cookie"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,UAAnD;AAEA,eAAe,MAAMC,aAAN,CAAoB;AACZ,SAAZC,YAAY,CAACC,KAAD,EAAgB;AAC/B,UAAMC,OAAO,GAAGR,UAAU,CAACO,KAAD,CAA1B;AACA,UAAME,YAAY,GAAGD,OAAO,CAACE,GAAR,GAAc,IAAnC;AACA,SAAKC,SAAL,CAAeT,UAAU,CAACU,mBAA1B,EAA+CL,KAA/C,EAAsDE,YAAtD;AACH;;AACqB,SAAfI,eAAe,GAAG;AACrB,SAAKC,YAAL,CAAkBZ,UAAU,CAACU,mBAA7B;AACH;;AAEsB,SAAhBG,gBAAgB,CAACR,KAAD,EAAgB;AACnC,UAAMC,OAAO,GAAGR,UAAU,CAACO,KAAD,CAA1B;AACA,UAAME,YAAY,GAAGD,OAAO,CAACQ,EAAR,GAAaR,OAAO,CAACS,MAA1C;AACA,SAAKN,SAAL,CAAeT,UAAU,CAACgB,wBAA1B,EAAoDX,KAApD,EAA2DE,YAA3D;AACH;;AACyB,SAAnBU,mBAAmB,GAAG;AACzB,SAAKL,YAAL,CAAkBZ,UAAU,CAACgB,wBAA7B;AACH;;AACoB,SAAdE,cAAc,GAAG;AACpB,SAAKN,YAAL,CAAkBZ,UAAU,CAACgB,wBAA7B;AACA,SAAKJ,YAAL,CAAkBZ,UAAU,CAACmB,iBAA7B;AACA,SAAKP,YAAL,CAAkBZ,UAAU,CAACoB,qBAA7B;AACA,SAAKR,YAAL,CAAkBZ,UAAU,CAACqB,cAA7B;AACH;;AAvB8B;;AAAdlB,a,CAyBFM,S,GAAY,CAACa,IAAD,EAAeC,KAAf,EAA8BC,IAA9B,KAA+C;AACtE,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,IAAJ,EAAU;AACN,QAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX,CADM,CAEN;;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAaJ,IAAb;AACAC,IAAAA,OAAO,GAAG,eAAeC,IAAI,CAACG,WAAL,EAAzB;AACH;;AAED,MAAI9B,OAAO,CAAC+B,GAAR,KAAgB,OAApB,EAA6B;AACzB;AACAC,IAAAA,QAAQ,CAACC,MAAT,GAAkBV,IAAI,GAAG,GAAP,IAAcC,KAAK,IAAI,EAAvB,IAA6BE,OAA7B,GAAuC,SAAzD;AACH,GAHD,MAGO;AACH;AACAM,IAAAA,QAAQ,CAACC,MAAT,GAAkBV,IAAI,GAAG,GAAP,IAAcC,KAAK,IAAI,EAAvB,IAA6BE,OAA7B,GAAuC,qDAAzD;AACH;AACJ,C;;AAzCgBtB,a,CA2CHF,S,GAAaqB,IAAD,IAAkB;AACxC,SAAOrB,SAAS,CAACqB,IAAD,CAAhB;AACH,C;;AA7CgBnB,a,CA+CHS,Y,GAAgBU,IAAD,IAAkB;AAC3CpB,EAAAA,WAAW,CAACoB,IAAD,CAAX;AACH,C","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport configs from \"../configs\";\nimport { CookieName, getCookie, eraseCookie } from \"./cookie\";\n\nexport default class CookieManager {\n    static setAuthToken(token: string) {\n        const payload = jwt_decode(token) as any;\n        const tokenExpTime = payload.exp * 1000;\n        this.setCookie(CookieName.NWAYPLAY_AUTH_TOKEN, token, tokenExpTime);\n    }\n    static deleteAuthToken() {\n        this.deleteCookie(CookieName.NWAYPLAY_AUTH_TOKEN);\n    }\n\n    static setNwayAuthToken(token: string) {\n        const payload = jwt_decode(token) as any;\n        const tokenExpTime = payload.ts + payload.expiry;\n        this.setCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN, token, tokenExpTime);\n    }\n    static deleteNwayAuthToken() {\n        this.deleteCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN);\n    }\n    static deleteNwayAuth() {\n        this.deleteCookie(CookieName.NWAYPLAY_NWAY_AUTH_TOKEN);\n        this.deleteCookie(CookieName.NWAYPLAY_NWAY_PID);\n        this.deleteCookie(CookieName.NWAYPLAY_DISPLAY_NAME);\n        this.deleteCookie(CookieName.NWAYPLAY_EMAIL);\n    }\n\n    private static setCookie = (name: string, value: string, time: number) => {\n        var expires = \"\";\n        if (time) {\n            var date = new Date();\n            // date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n            date.setTime(time);\n            expires = \"; expires=\" + date.toUTCString();\n        }\n\n        if (configs.ENV === \"LOCAL\") {\n            // local\n            document.cookie = name + \"=\" + (value || \"\") + expires + \";path=/\";\n        } else {\n            // server\n            document.cookie = name + \"=\" + (value || \"\") + expires + \";domain=.nwayplay.com;SameSite=Strict;Secure;path=/\";\n        }\n    }\n\n    public static getCookie = (name: string) => {\n        return getCookie(name);\n    }\n\n    public static deleteCookie = (name: string) => {\n        eraseCookie(name);\n    }\n}"]},"metadata":{},"sourceType":"module"}